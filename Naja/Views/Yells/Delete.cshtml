@model Naja.ViewModels.ChatViewModel

@{
    ViewData["Title"] = "Delete";
}

<h1 class="text-center">Delete Chat</h1>

<div>
    <table class="table table-sm table-borderless text-danger bg-dark rounded-1">
        <tbody>
            <tr>
                <td class="py-0 align-middle" title="@Model.Chat.Datetime">
                    <span class="opacity-50 text-info">@($"{Model.Chat.Speaker}: ")</span><span
                        data-chat-message="@Model.Message"></span>
                </td>
            </tr>
        </tbody>
    </table>
    <h3 class="text-center">Are you sure you want to delete this?</h3>

    <form class="text-center" asp-action="Delete" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="Chat.LineId" />
        <input type="submit" value="Delete" class="btn btn-danger" />
        <a class="btn btn-secondary" asp-action="Index">Cancel</a>
    </form>
</div>

@section Scripts {
    <script>
        // Colorize Auto-Translate brackets
        function colorizeCharacters() {
            document.addEventListener("DOMContentLoaded", function () {
                var elements = document.querySelectorAll('[data-chat-message]');

                elements.forEach(function (element) {
                    var message = element.getAttribute('data-chat-message');
                    var bracketCount = 0;
                    var translateString;

                    for (var i = 0; i < message.length; i++) {
                        if (message[i] === 'ý') {
                            var bracket = bracketCount % 2 === 0 ? '{' : '}';
                            var color = bracketCount % 2 === 0 ? 'green' : 'red';
                            if (bracketCount % 2 !== 0) {
                                element.innerHTML += translateString;
                            }
                            element.innerHTML += '<span class="fw-bold" style="color:' + color + ';">' + bracket + '</span>';
                            translateString = ''
                            bracketCount++;
                        }
                        else {
                            if (bracketCount % 2 !== 0) {
                                translateString += message[i];
                            }
                            else {
                                element.appendChild(document.createTextNode(message[i]));
                            }
                        }
                    }
                });
            });
        }

        colorizeCharacters();
    </script>
}
