@model PaginatedList<Naja.ViewModels.ChatViewModel>

@using Naja.Services

@inject IAccountService AccountService

@{
    ViewData["Title"] = "Yells";
    var count = ViewData["count"];
    var currentCharacter = await AccountService.GetCurrentCharacter();
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<h1 class="text-center display-4">Yells</h1>

<table class="table table-sm table-borderless text-danger bg-dark rounded">
    <thead>
        <tr>
            <td class="p-0">
                <a asp-action="Index" asp-route-page="1" asp-route-count="@count"
                    class="rounded-0 rounded-top btn btn-secondary btn-sm align-top p-0 w-100 border-2 shadow-none @prevDisabled">
                    Oldest
                </a>
            </td>
        </tr>
        <tr>
            <td class="p-0">
                <a asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" asp-route-count="@count"
                    class="rounded-0 btn btn-secondary btn-sm align-top p-0 w-100 shadow-none @prevDisabled">
                    Previous
                </a>
            </td>
        </tr>
    </thead>
    <tbody>
        @{
            var i = 0;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td class="py-0 align-middle" title="@item.Chat.Datetime">
                    @if (currentCharacter != null && currentCharacter.Gmlevel > 0)
                    {
                        <a class="bi bi-trash-fill text-danger" asp-action="Delete" asp-route-id="@item.Chat.LineId"></a>
                    }
                    <span class="opacity-50 text-info">
                        @($"{item.Chat.Speaker}: ")
                    </span>
                    <span data-chat-message="@item.Message">
                        @item.Message
                    </span>
                </td>
            </tr>
            ++i;
        }
        @while (i < (int)count)
        {
            <tr><td class="py-0 align-middle">&nbsp;</td></tr>
            ++i;
        }
    </tbody>
    <tfoot>
        <tr>
            <td class="p-0">
                <a asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" asp-route-count="@count"
                    class="rounded-0 btn btn-secondary btn-sm align-bottom p-0 w-100 shadow-none @nextDisabled">
                    Next
                </a>
            </td>
        </tr>
        <tr>
            <td class="p-0">
                <a asp-action="Index" asp-route-page="@(Model.TotalPages)" asp-route-count="@count"
                    class="rounded-0 rounded-bottom btn btn-secondary btn-sm align-bottom p-0 w-100 border-2 shadow-none @nextDisabled">
                    Newest
                </a>
            </td>
        </tr>
    </tfoot>
</table>

@section Scripts {
    <script>
        // Colorize Auto-Translate brackets
        function colorizeCharacters() {
            document.addEventListener("DOMContentLoaded", function () {
                var elements = document.querySelectorAll('[data-chat-message]');

                elements.forEach(function (element) {
                    element.innerHTML = '';
                    var message = element.getAttribute('data-chat-message');
                    var bracketCount = 0;
                    var translateString;

                    for (var i = 0; i < message.length; i++) {
                        if (message[i] === 'Ã½') {
                            var bracket = bracketCount % 2 === 0 ? '{' : '}';
                            var color = bracketCount % 2 === 0 ? 'green' : 'red';
                            if (bracketCount % 2 !== 0) {
                                element.innerHTML += translateString;
                            }
                            element.innerHTML += '<span class="fw-bold" style="color:' + color + ';">' + bracket + '</span>';
                            translateString = ''
                            bracketCount++;
                        }
                        else {
                            if (bracketCount % 2 !== 0) {
                                translateString += message[i];
                            }
                            else {
                                element.appendChild(document.createTextNode(message[i]));
                            }
                        }
                    }
                });
            });
        }

        colorizeCharacters();
    </script>
}